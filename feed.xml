<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yunicode</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2015-09-15T23:45:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>【読書メモ】チームが機能するとはどういうことか――「学習力」と「実行力」を高める実践アプローチ</title>
    <link rel="alternate" href="http://blog.url.com/2015/09/15/teaming.html"/>
    <id>http://blog.url.com/2015/09/15/teaming.html</id>
    <published>2015-09-15T23:45:00+09:00</published>
    <updated>2015-09-15T23:55:01+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://www.amazon.co.jp/%E3%83%81%E3%83%BC%E3%83%A0%E3%81%8C%E6%A9%9F%E8%83%BD%E3%81%99%E3%82%8B%E3%81%A8%E3%81%AF%E3%81%A9%E3%81%86%E3%81%84%E3%81%86%E3%81%93%E3%81%A8%E3%81%8B%E2%80%95%E2%80%95%E3%80%8C%E5%AD%A6%E7%BF%92%E5%8A%9B%E3%80%8D%E3%81%A8%E3%80%8C%E5%AE%9F%E8%A1%8C%E5%8A%9B%E3%80%8D%E3%82%92%E9%AB%98%E3%82%81%E3%82%8B%E5%AE%9F%E8%B7%B5%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81-%E3%82%A8%E3%82%A4%E3%83%9F%E3%83%BC%E3%83%BBC%E3%83%BB%E3%82%A8%E3%83%89%E3%83%A2%E3%83%B3%E3%83%89%E3%82%BD%E3%83%B3/dp/4862761828"&gt;チームが機能するとはどういうことか――「学習力」と「実行力」を高める実践アプローチ&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="section"&gt;感想&lt;/h1&gt;
&lt;p&gt;これからチームを持つ、チーミングを必要とする人におすすめ。特にプレイヤーからマネジメント側に回る人は必読。自分はまさにこれからチームでプロダクトに関わって行く、というタイミングだったので適切な内容だった。若干冗長なので半分ぐらいまで読めばだいたい内容は掴めるという感じチリ鉱山落盤事故救出チームの話など挙げられている事例もチーミングを具体的にイメージしやすい。チームで協力し成果を出したい、という想いに沿った本なので読むだけに留まらせずぜひ経験と共に習得していきたい内容。&lt;/p&gt;

&lt;p&gt;自分のチームは若いメンバーで構成されているのだが、そういうメンバーにどういう形でチーミングしていくか？において、特に信頼関係を築いていく上で「心理的安全な場」の章は実践でも非常に役立った。チーミングのスキルはひとりで習得できるものではないので実際に今のチーム内で試行し、お互い尊敬しつつ安心して成果を上げるチームを目指していきたいです。&lt;/p&gt;

&lt;p&gt;以下、自分用要約まとめ。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id="section-1"&gt;チーミング&lt;/h1&gt;

&lt;h2 id="section-2"&gt;新しい働き方&lt;/h2&gt;

&lt;h3 id="section-3"&gt;チーミングは動詞である&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;めまぐるしく変わる職場環境に必要なのはチーミングの仕方を知ってる人&lt;/li&gt;
  &lt;li&gt;時間や場所を選ばず行動するスキルと柔軟性とを持っている人&lt;/li&gt;
  &lt;li&gt;チーミングを促進するために、リーダーは自分がリードする人たちを信頼しなければならない&lt;/li&gt;
  &lt;li&gt;必要とされるのはダイナミックで柔軟性のあるチーム&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="section-4"&gt;学習とイノベーションと競争の為のチーミング&lt;/h2&gt;

&lt;h3 id="section-5"&gt;効果的なチーミングの４つの柱&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;◆率直に意見を言う&lt;/li&gt;
  &lt;li&gt;◆協働する（協力する・尊敬し合う・目標を共有する&lt;/li&gt;
  &lt;li&gt;◆試みる（うまくいくことを期待しない&lt;/li&gt;
  &lt;li&gt;◆省察する（形だけのプロセスではなくもっと行動本意&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-6"&gt;対立が激化するとき&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;◆対立の性質を見極める（有益と生産的でないものの理解&lt;/li&gt;
  &lt;li&gt;◆優れたコミュニケーションを具現化（激しい衝突が起きているときにうまく図ると意見と思慮深い質問とを結びつけることが出来る&lt;/li&gt;
  &lt;li&gt;◆共通の目標を明らかにする（尊敬の念を損なう根本的な帰属の誤りを克服し信頼し合う環境へ&lt;/li&gt;
  &lt;li&gt;◆難しい会話から逃げずに取り組む（本物の会話&lt;/li&gt;
  &lt;li&gt;問題を別の観点から見ると激しい対立をクールダウンさせるのに効果的&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-7"&gt;チーミングを促進するリーダーシップ行動&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;行動１：学習する為の骨組みをつくる&lt;/li&gt;
  &lt;li&gt;行動２：心理的安全な場をつくる&lt;/li&gt;
  &lt;li&gt;行動３：失敗から学ぶ&lt;/li&gt;
  &lt;li&gt;行動４：職業的、文化的境界をつなぐ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-8"&gt;学習するための組織作り&lt;/h1&gt;

&lt;h2 id="section-9"&gt;フレーミングの力&lt;/h2&gt;

&lt;h3 id="section-10"&gt;リーダーの役割&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;質問し、耳を傾け、学習する&lt;/li&gt;
  &lt;li&gt;自分と他のメンバーが相互依存の関係にあることを自ら実感していると伝える&lt;/li&gt;
  &lt;li&gt;自分も間違う場合があるということを述べる&lt;/li&gt;
  &lt;li&gt;恊働する必要性をはっきり示す&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-11"&gt;学習フレームを強固にするリーダーシップ戦術&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;言葉と目を使った会話&lt;/li&gt;
  &lt;li&gt;望ましい対人行動及び協調的行動についてせつめいしたり手本を示す&lt;/li&gt;
  &lt;li&gt;具体的な言葉を使って説明する&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="section-12"&gt;心理的に安全な場をつくる&lt;/h2&gt;

&lt;h3 id="section-13"&gt;職場環境における対人リスク&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;◆無知だと思われる不安&lt;/li&gt;
  &lt;li&gt;◆無能だと思われる不安&lt;/li&gt;
  &lt;li&gt;◆ネガティブだと思われる不安&lt;/li&gt;
  &lt;li&gt;◆邪魔をする人だと思われる不安&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-14"&gt;チーミングと学習にとっての心理的安全&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;率直に話すことが奨励される&lt;/li&gt;
  &lt;li&gt;考えが明晰になる&lt;/li&gt;
  &lt;li&gt;意義のある対立が後押しされる&lt;/li&gt;
  &lt;li&gt;失敗が緩和される&lt;/li&gt;
  &lt;li&gt;イノベーションが促される&lt;/li&gt;
  &lt;li&gt;成功という目標を追求する上での障害が取り除かれる&lt;/li&gt;
  &lt;li&gt;責任が向上する&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-15"&gt;心理的安全を高めるためのリーダーの行動&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;直接話のできる、親しみやすい人になる&lt;/li&gt;
  &lt;li&gt;現在持っている知識の限界を認める&lt;/li&gt;
  &lt;li&gt;自分もよく間違うことを積極的に示す&lt;/li&gt;
  &lt;li&gt;参加を促す&lt;/li&gt;
  &lt;li&gt;失敗は学習する機会であることを強調する&lt;/li&gt;
  &lt;li&gt;具体的な言葉を使う&lt;/li&gt;
  &lt;li&gt;境界を設ける&lt;/li&gt;
  &lt;li&gt;境界を越えたことについてメンバーに責任を負わせる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-16"&gt;学習しながら実行する&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;学習しながら実行する場合、リーダーは答えを与えるのではなく、方向性を定める&lt;/li&gt;
  &lt;li&gt;方向性を定めるとは、その組織にとって最も重要な優先事項を述べることである&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>頭が良くない人向けの本の読み方</title>
    <link rel="alternate" href="http://blog.url.com/2015/09/12/reading.html"/>
    <id>http://blog.url.com/2015/09/12/reading.html</id>
    <published>2015-09-12T22:27:00+09:00</published>
    <updated>2015-09-12T23:03:08+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;こんにちは！yunico.nagataです。結構ひさしぶりになってしまった。最近はまた少し別のことを勉強してます。&lt;/p&gt;

&lt;p&gt;よって、いろんな本を読むわけですが、小説のようにじっくりと一行ずつ読むので非常に進みが遅く、そして内容がなかなか頭に入ってこない。
そんなに頭が良くないので勉強しようと本を読むけど本もうまく読めないとか悲しすぎます。という訳で変えてみることにしました。&lt;/p&gt;

&lt;p&gt;参考にしたのは&lt;a href="http://blog.livedoor.jp/kensuu/archives/50875771.html"&gt;けんすうさんのブログ&lt;/a&gt;。2009年の記事なんですが、いま読んでも非常に役立つノウハウです。&lt;/p&gt;

&lt;p&gt;そんなに頭が良くない人はそれなりに適切なやり方を意識的に選択していかないとやばい。頭が良くないということを自覚するのも大事です。具体的なやり方はブログに書かれているものが全てなのですが、少し引用をさせていただくとこんな感じ。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;１：もくじを熟読&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;２：著者欄を熟読&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;３：ネットとかでその本について調べてレビューを読む&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;４：どんないいことが書かれているか仮説を立ててどっかに書いておく&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;５：１時間で読み切るぞと時間を計って読む（電車を降りるまで、とか決めてもOK）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;６：ぐわって仮説で立てた個所がないか探しながらざっと全体を「眺める」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;７：関係ありそうなところがあれば本のはしを追っておく&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;８：関係ありそうなところは熟読&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;９：読み終わったらもうその本は捨てちゃう。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;１０：その本から何を得たかどっかに書いておく。書かなくても頭の中で考えておく&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;要は、必要なエッセンスだけ取り出せられればOK、ぐらいの気持ちで読む。欲張りすぎないことです。&lt;/p&gt;

&lt;p&gt;実際に仮説を立ててから、時間を決めて、眺めながら関係ありそうなところを探して必要な部分のみを取り出していく、という読み方に変えてみたところ、非常に効率よく内容を理解することができました。てか、周りの人に話したらみんな既にそうしていた……&lt;/p&gt;

&lt;p&gt;時間がなくてなかなか本が読めない〜とか、本を読むのが苦手だ〜、という人におすすめです。&lt;/p&gt;

&lt;p&gt;おわり&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Git初心者にはGUIとCUIどちらを勧めるべきか</title>
    <link rel="alternate" href="http://blog.url.com/2015/05/31/git-cui-or-gui.html"/>
    <id>http://blog.url.com/2015/05/31/git-cui-or-gui.html</id>
    <published>2015-05-31T15:54:00+09:00</published>
    <updated>2015-05-31T16:08:26+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;こんにちは！yunico.nagataです。34歳になりました！&lt;/p&gt;

&lt;p&gt;さて、ちょっとタイトルにあるようなことについて考えるキッカケがあったので、自分の考えを書いてみたいと思います。結構いろんなところに書いているのでまたかという感じはあります。&lt;/p&gt;

&lt;h2 id="git"&gt;Gitとどう向き合うべきか&lt;/h2&gt;

&lt;p&gt;たぶん世の中には&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gitが使えればよくわかっていなくてもそれでいい派&lt;/li&gt;
  &lt;li&gt;どういうものかをきちんと理解して使ったほうがいい派&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のふたつに分かれるかなあと思います。&lt;/p&gt;

&lt;p&gt;日々の業務で使うぐらいであればとりあえず使えればいいって感じでもいいかもなんですが、わたしは後者、きちんと理解をしてから使った方がいいんじゃないかと思う派です。&lt;/p&gt;

&lt;p&gt;理由の元は自分の実体験。nanapiでGitを導入します〜ってなったとき「うわ〜ちょうむずそう〜やりたくねえ〜」って思ったのが正直な気持ちで、最初はそれっぽく使えればいいやと思ってGUIからポチポチ操作をしていました。
でもGitってそこそこ複雑なものなので、エラーはまあ、出まくる。そうしたときにGUI上での解決が難しかったりします。「Gitのエラーを」「そのGUIのやり方で」解決しないといけないのでややこしい。
エラーでググってもターミナルでの解決法ばっかり出るし。で、結局解決できない。「まじGitむずい　使いたくない…」みたいな気持ちが加速する。
結局エンジニアにお願いして解決してもらうのだけれど、エンジニアはみんなCUIで操作してるから当然コマンドで解決しますよね。だからまた同じエラーが起きてもわたしは結局またGUIで解決できないわけです。以下負のループ。
この辺は去年の&lt;a href="https://speakerdeck.com/yunico/20140529-nanapistudy-vol2-yunico"&gt;nanapi勉強会&lt;/a&gt;でも話したりしたやつです。&lt;/p&gt;

&lt;p&gt;そこから、エンジニアに教えてもらいやすいし、コマンドで覚えた方がシンプルだし、ググりやすいし、ってことでCUIで覚え始めたんですが、いまではもうこれ以外考えられん…という感じ。
CUIシンプルでいい。どのPCでもどんな環境でもすぐ使えるし。
仕組みとかをちゃんと理解した上でコマンド操作もできるけどGUIの方がラクだからっていうのは賛成
。RubyMineとかもそこからGit操作ができちゃうので、エディタとターミナルの移動がなくていいですよね。&lt;/p&gt;

&lt;p&gt;時々見かける「デザイナーは黙ってGUI使えや」っていうのとか「GUIで使えてればそれでいいじゃん」的なのを見るとなんだかなーと思ってしまいます、、
5月から入った新人ちゃんもGit初体験っていってたけど今ではフツーにターミナルから操作してるので、理解できればCUIでも問題ないきがする。
というわけで「ちゃんと理解した上でのGUIは賛成」派！という感じ。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>モチベーションを保ち続ける方法</title>
    <link rel="alternate" href="http://blog.url.com/2015/04/10/motivation.html"/>
    <id>http://blog.url.com/2015/04/10/motivation.html</id>
    <published>2015-04-10T00:09:00+09:00</published>
    <updated>2015-06-25T13:31:25+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;こんにちは！yunico.nagataです。昨日今日寒すぎないですか？4月ですよ？&lt;/p&gt;

&lt;p&gt;期が新しくなったので、新しいことに取り組んでいます。結構やる気満々だよ！&lt;/p&gt;

&lt;p&gt;前期からずっとモチベーションが続いているのだけど理由は自分でもよくわかりません。たぶん、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;人と一緒にやってる&lt;/li&gt;
  &lt;li&gt;好きなことをやってる&lt;/li&gt;
  &lt;li&gt;おもしろがってやってる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あたりが良いんじゃないかな〜と思ってます。何ごともおもしろがってやるというのは大事すねえ。&lt;/p&gt;

&lt;p&gt;なんかもっと書こうと思ったけどこんな感じっす。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>前期の反省・感想と今期の抱負</title>
    <link rel="alternate" href="http://blog.url.com/2015/04/05/restart.html"/>
    <id>http://blog.url.com/2015/04/05/restart.html</id>
    <published>2015-04-05T00:43:00+09:00</published>
    <updated>2015-04-05T00:54:39+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;こんにちは！yunico.nagataです。日記を一週間ぐらいさぼってました。というか、一段落ついたので休憩してた。気が抜けたのかすごい風邪ひきました。まだ直っていない。&lt;/p&gt;

&lt;h2 id="section"&gt;前期の反省・感想&lt;/h2&gt;
&lt;p&gt;さて、期が新しくなりましたので目標も新たに再設定です。ちなみに、全期では、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;slim&amp;amp;sassを使った何かを作る（このブログ作った）&lt;/li&gt;
  &lt;li&gt;ロジカルシンキング（問題解決）について読書・要約まとめ&lt;/li&gt;
  &lt;li&gt;UIデザインについての読書・要約まとめ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などを行いました。結構がんばった！てかまあ、普通にとても勉強になりましたね。やっぱりわたしは机上の空論より実際に手を動かす方が好きです。アウトプットしてなんぼ！&lt;/p&gt;

&lt;h2 id="section-1"&gt;今期の抱負&lt;/h2&gt;
&lt;p&gt;今期は主に二つ、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@kozytyとGitについてのプロジェクト&lt;/li&gt;
  &lt;li&gt;@funnythingzとAndroidアプリ作成プロジェクト&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の２つをがんばってやっていきたいと思います。ディレクション・デザイン全般を担当。&lt;/p&gt;

&lt;p&gt;まだ設計段階なのだけど内容がクソおもしろそうなので、どちらもフルコミットしてやりきりたい！前期はひとり目標だったので人と一緒にやれるの楽しみだ！がんばるぞ！&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>【読書メモ】iPhoneアプリ設計の極意 ―思わずタップしたくなるアプリのデザイン</title>
    <link rel="alternate" href="http://blog.url.com/2015/03/30/secret-design-of-iphone-app.html"/>
    <id>http://blog.url.com/2015/03/30/secret-design-of-iphone-app.html</id>
    <published>2015-03-30T15:57:00+09:00</published>
    <updated>2015-03-30T23:30:36+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://www.amazon.co.jp/iPhone%E3%82%A2%E3%83%97%E3%83%AA%E8%A8%AD%E8%A8%88%E3%81%AE%E6%A5%B5%E6%84%8F-%E2%80%95%E6%80%9D%E3%82%8F%E3%81%9A%E3%82%BF%E3%83%83%E3%83%97%E3%81%97%E3%81%9F%E3%81%8F%E3%81%AA%E3%82%8B%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3-Josh-Clark/dp/4873115027"&gt;iPhoneアプリ設計の極意 ―思わずタップしたくなるアプリのデザイン&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="section"&gt;感想&lt;/h1&gt;
&lt;p&gt;普段何気なく使っているiPhoneの所作について改めて丁寧に解説してある一冊。無意識のうちにすらすらと使っていた「使いやすさ」の裏には何があるの？どうして無意識に使いやすいと感じるの？がきちんと分かる。iPhoneアプリにこれから携わる、という人は必読かも。各章の終わりに、わかりやすい章の要約がまとめられているので、それを読み返すだけでもかなり参考になる。
キャプやiOSの動作が少し古かったりするのだけれど、基本的に大事な部分はほぼ変わらず。iPhoneアプリを開発するなら、この一冊&amp;amp;Appleのガイドラインでちゃんと「お約束」を確認しておくべきであった。&lt;/p&gt;

&lt;p&gt;以下、自分用要約まとめ。
&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id="section-1"&gt;素早い操作&lt;/h1&gt;

&lt;h3 id="section-2"&gt;まとめ&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;「５つのW」に焦点を合わせ、アプリがタップする価値のあるものとなる条件を明確にする&lt;/li&gt;
  &lt;li&gt;机から離れた状況で使う為の機能に集中させる。&lt;/li&gt;
  &lt;li&gt;「マイクロタスク」「ここでしかできないこと」「退屈だな〜」を念頭に置いて開発&lt;/li&gt;
  &lt;li&gt;自分のアプリを類似アプリから差別かする内容を見極める&lt;/li&gt;
  &lt;li&gt;「スキル」「カリスマ性」&lt;/li&gt;
  &lt;li&gt;データを途中でほじゅうできるようにしたりコミュニティを形成できるようにしたりして長く使ってもらえるようにする&lt;/li&gt;
  &lt;li&gt;構想は大きく、実装は小さく&lt;/li&gt;
  &lt;li&gt;Webサイトのアプリ版を作るときはiPhoneで使うプラスαのメリットを生み出す方法を検討する&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-3"&gt;小さなタッチスクリーン&lt;/h1&gt;

&lt;h3 id="ui"&gt;カスタムUIパーツ作成のヒント&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;ページを開いたときにナビゲーションバーにアニメーションを使って、メニュー項目が画面左からスライドして入ってくる→右側にもメニューがあるよっていう覚えてもらい方&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-4"&gt;フラットページ　ページインジケーター&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;最初の画面から最後の画面に直接ジャンプはできない&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="section-5"&gt;まとめ&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;人間工学的配慮が必要。手に持ったときのアプリの操作感を考える&lt;/li&gt;
  &lt;li&gt;主要なUIパーツは親指の届く「ホットゾーン」に置く&lt;/li&gt;
  &lt;li&gt;マジックナンバーは４４。タップ領域は少なくとも４４pxにし、４４pxのリズムでデザインをする&lt;/li&gt;
  &lt;li&gt;空間には余裕を持ち、画面をスッキリさせる&lt;/li&gt;
  &lt;li&gt;主要な情報は画面上部に。主要なUIパーツは画面下部に配置&lt;/li&gt;
  &lt;li&gt;主要なUIパーツはタップしやすいところに固定。可能ならスクロールはしない&lt;/li&gt;
  &lt;li&gt;飾りを減らし、高機能なツールは秘密のパネルや隠し扉を使って表示する補助画面に移動させる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-6"&gt;デザインを始める前に&lt;/h1&gt;

&lt;h3 id="section-7"&gt;まとめ&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Appleのデザインセンスを生かそう&lt;/li&gt;
  &lt;li&gt;Apple標準のナビゲーションモデルは、フラットページ・タブバー・ツリー構造の３種類。適切な物を選ぼう&lt;/li&gt;
  &lt;li&gt;いきなりピクセルレベルの作業に飛び込んだりせず、加味の上で全体像を考える&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="ui-1"&gt;標準のUIパーツ&lt;/h1&gt;

&lt;h3 id="section-8"&gt;ナビゲーションバー&lt;/h3&gt;
&lt;p&gt;「戻る」ボタンの位置は絶対的なもの。ナビゲーションバーの左側がこのボタンの定位置。これ以外のUIパーツをここに置くことは避ける。&lt;/p&gt;

&lt;h3 id="section-9"&gt;バーのアイコン&lt;/h3&gt;
&lt;p&gt;標準のボタンを利用すれば無駄な労力をかけずに済み、ユーザーが意味のわからないアイコンを見つけて首を傾げることがなくなる。アイコンのカタチに別の意味があってもその意味で使ってはいけない。&lt;/p&gt;

&lt;h3 id="section-10"&gt;テーブルビュー&lt;/h3&gt;
&lt;p&gt;iPhoneで使われる標準尾テーブルビューはリストのことを差す&lt;/p&gt;

&lt;h3 id="section-11"&gt;まとめ&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;標準のUIパーツを利用する。見慣れたものには権威がある&lt;/li&gt;
  &lt;li&gt;画面内にバーは２種類まで。画面上部にはナビゲーションバー、下部にはタブバーかツールバーのどちらか。&lt;/li&gt;
  &lt;li&gt;検索バーは画面上に固定するのではなく、スクロールする部分に入れてしまおう&lt;/li&gt;
  &lt;li&gt;テキストフィールドではどのキーボードを使うかよく検討する&lt;/li&gt;
  &lt;li&gt;設定の数は絞り込む。そして「設定」アプリに自分のアプリの設定をいれるのはやめる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-12"&gt;目立たせる&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;デザインを始める前にアプリの「個性」を決めよう&lt;/li&gt;
  &lt;li&gt;色や画像をカスタマイズして標準UIパーツに個性を付加しよう。&lt;/li&gt;
  &lt;li&gt;アイコンは個性を重視するよりも明確さを重視しよう。&lt;/li&gt;
  &lt;li&gt;細部に凝るよりもシルエットをすっきりさせる&lt;/li&gt;
  &lt;li&gt;インターフェースのメタファーを現実の世界から取り入れる&lt;/li&gt;
  &lt;li&gt;リスクを恐れずにチャレンジする&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-13"&gt;第一印象&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;アプリのアイコンは機能、インターフェース、名前、ブランドを表すものにしよう&lt;/li&gt;
  &lt;li&gt;アイコンのデザインには力強く単純なシルエットを取り入れよう&lt;/li&gt;
  &lt;li&gt;短い名前がベスト&lt;/li&gt;
  &lt;li&gt;素早く起動するかのように見せるため、起動画像をアプリのバッググラウンドに見せてカモフラージュしよう&lt;/li&gt;
  &lt;li&gt;「一時停止したアニメーション」による錯覚を利用する&lt;/li&gt;
  &lt;li&gt;初めてのユーザーのために単純でわかりやすい「玄関マット」を用意する&lt;/li&gt;
  &lt;li&gt;アプリの初期画面は特にスッキリとした物に&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-14"&gt;スワイプ、ピンチ、フリック&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;ジェスチャーの意味は経験から類推される&lt;/li&gt;
  &lt;li&gt;ユーザーがアプリをどう使おうとするかを観察し、それをもとに採用するジェスチャーを決める&lt;/li&gt;
  &lt;li&gt;ジェスチャーが見つけられないユーザーのために代替手段を用意する。すべての操作がジェスチャー以外の方法、表示されているUIパーツを使ってできなければならない&lt;/li&gt;
  &lt;li&gt;シェイクは「取り消す」「やり直す」のダイアログボックスを表示するためか、何かおまけの機能のためだけにする&lt;/li&gt;
  &lt;li&gt;全てのタッチや動作に対して視覚的なフィードバックを表示し、控えめな効果音を補助的につける&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-15"&gt;横向き画面の活用&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;まずはアプリを縦向きで最適化し、それから横向きに対応させよう&lt;/li&gt;
  &lt;li&gt;横向き画面では、単にコンテンツを拡大するのではなく、別の方法で表示しよう&lt;/li&gt;
  &lt;li&gt;入力の多いアプリなら縦横の向きのキーボードをサポートする&lt;/li&gt;
  &lt;li&gt;横向き画面では縦向き画面で表示している内容をグラフィカルに表現してみよう&lt;/li&gt;
  &lt;li&gt;重要なコンテンツや機能は回転しなくても表示されるようにしよう&lt;/li&gt;
  &lt;li&gt;回転でレイアウトが変わってもユーザーが迷わないようにしよう&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-16"&gt;礼儀正しい会話&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;アラートは緊急のイベントの為だけに使う&lt;/li&gt;
  &lt;li&gt;アプリがそこから先は使えなくなってしまいそうな場合や許可を必要とする場合&lt;/li&gt;
  &lt;li&gt;アラーと画面では穏やかな説明口調を用いる&lt;/li&gt;
  &lt;li&gt;アラート画面のデフォルトボタンには一番安全な選択肢を割り当てる&lt;/li&gt;
  &lt;li&gt;ノーティフィケーションはユーザーが設定できるようにする&lt;/li&gt;
  &lt;li&gt;スピナーやモーダルボタンを使ってアプリが全力で仕事をしていることを知らせる&lt;/li&gt;
  &lt;li&gt;プログレスバーやゲームなどで実際より速く動作しているようにみせる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="section-17"&gt;こんにちは、お隣さん&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;自分のアプリだけの連絡先、イベント、画像を作らないようにする&lt;/li&gt;
  &lt;li&gt;既存の連絡先やイベントの記録を対象にして追加や拡張をする&lt;/li&gt;
  &lt;li&gt;副次的機能に関しては他のアプリとリンクし、自分のアプリでもリンクを受け入れる&lt;/li&gt;
  &lt;li&gt;終了時点で他のアプリへリンクするようにする&lt;/li&gt;
  &lt;li&gt;ウェブビューやマップビューに関しては「最低限」のアプローチをとり、より複雑な機能はsafariやマップアプリへジャンプするようにする&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
</feed>
